---
version: "3.7"
services:
  # redis:
  #   image: redis:5.0.7
  #   expose:
  #     - "6379"
  #   command: /usr/local/etc/redis/redis.conf
  #   volumes:
  #     - ./config/redis.conf:/usr/local/etc/redis/redis.conf
  migration:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: backend_core
    tty: true
    command: ./manage.py migrate --noinput
    volumes:
      - ./config/settings.dev.py:/opt/app/backend/settings.py
      - ./config/db.sqlite3:/opt/app/db.sqlite3
  backend_core:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: backend_core
    tty: true
    expose:
      - "8000"
    volumes:
      - ./config/settings.prod.py:/opt/app/backend/settings.py
      - ./config/db.sqlite3:/opt/app/db.sqlite3
    # links:
    #   - redis
    depends_on:
      - migration
  # backend_channels_worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.prod
  #     target: backend_core
  #   tty: true
  #   command: ./manage.py runworker song_update_default
  #   volumes: 
  #     - ./config/settings.prod.py:/opt/app/backend/settings.py
  #     - ./config/db.sqlite3:/opt/app/db.sqlite3
  #   links:
  #     - redis
  # backend_celery_worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.prod
  #     target: backend_celery_worker
  #   tty: false
  #   volumes:
  #     - ./config/settings.prod.py:/opt/app/backend/settings.py
  #     - ./config/db.sqlite3:/opt/app/db.sqlite3
  #   links:
  #     - redis
  # backend_celery_beat:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.prod
  #     target: backend_celery_beat
  #   tty: false
  #   volumes:
  #     - ./config/settings.prod.py:/opt/app/backend/settings.py
  #     - ./config/db.sqlite3:/opt/app/db.sqlite3
  #   links:
  #     - redis
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: frontend
    tty: true
    expose:
      - "3000"
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: web
    expose:
      - "80"
      - "443"
    ports:
      - "${STB_HTTP:-80}:80"
      - "${STB_HTTPS:-444}:443"
    volumes:
      - ./config/nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - ./config/ssl/localhost.crt:/etc/nginx/cert.pem
      - ./config/ssl/localhost.key:/etc/nginx/key.pem
    links:
      - backend_core
